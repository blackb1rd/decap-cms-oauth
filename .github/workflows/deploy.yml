name: Deploy

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        run: |
          # Setup SSH
          SSH_KEY_PATH="$HOME/.ssh/id_ed25519"
          mkdir -p "$HOME/.ssh"
          echo -e "${{ secrets.SSH_PRIVATE_KEY }}" > "$SSH_KEY_PATH"
          chmod 600 "$SSH_KEY_PATH"

          # Safely escape secrets for the remote shell
          OAUTH_CLIENT_ID_ESCAPED=$(printf '%q' "$OAUTH_CLIENT_ID")
          OAUTH_SECRET_ESCAPED=$(printf '%q' "$OAUTH_SECRET")
          OAUTH_ORIGINS_ESCAPED=$(printf '%q' "$OAUTH_ORIGINS")

          # Pull the latest image and restart the service on the server
          ssh -i $SSH_KEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{ secrets.SSH_USER_HOST }} " \
            docker pull ghcr.io/blackb1rd/decap-cms-oauth:latest && \
            docker stop decap-cms-oauth-app || true && \
            docker rm decap-cms-oauth-app || true && \
            docker run -d \
              --name decap-cms-oauth-app \
              --restart always \
              -p 3005:3005 \
              -e OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID_ESCAPED \
              -e OAUTH_SECRET=$OAUTH_SECRET_ESCAPED \
              -e OAUTH_ORIGINS=$OAUTH_ORIGINS_ESCAPED \
              ghcr.io/blackb1rd/decap-cms-oauth:latest"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER_HOST: ${{ secrets.SSH_USER_HOST }}
          OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
          OAUTH_SECRET: ${{ secrets.OAUTH_SECRET }}
          OAUTH_ORIGINS: ${{ secrets.OAUTH_ORIGINS }}
        shell: bash
